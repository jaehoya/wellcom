# .github/workflows/deploy.yml

# Name of the workflow
name: Deploy Website to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab on GitHub
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job builds the website
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: This step is for a plain HTML/CSS/JS site.
      # If you use a framework like React, Vue, or Hugo, see the "Customization" section below.
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Step 3: Upload the build output as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This is the folder where your site is located.
          # For plain HTML, it's the root. For frameworks, it might be 'dist', 'build', or 'public'.
          path: '.'

  # This job deploys the artifact to GitHub Pages
  deploy:
    # Requires the 'build' job to have completed successfully
    needs: build
    runs-on: ubuntu-latest
    
    # Grant GITHUB_TOKEN the permissions it needs to deploy to Pages
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an authentic source

    # Specify the deployment environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Step 1: Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
